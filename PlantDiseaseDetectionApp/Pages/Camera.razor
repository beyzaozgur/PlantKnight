@page "/camera/{Id:int}"

<div class="button-container">
    @if(Id == 1)
    {
        <button class="btn btn-primary" @onclick="TakeUploadPhoto">Take Photo</button>
    } else
    {
        <button class="btn btn-primary" @onclick="TakeUploadPhoto">Upload Photo</button>
    }
</div>

@if (!string.IsNullOrEmpty(imageFilePath))
{
    <img class="plant-image" width="300" height="300" src="@imageFilePath" />
    <div class="button-container">
        <button class="btn btn-warning">Detect Disease</button>
    </div>
}


@code {

    [Parameter]
    public int Id { get; set; }

    public string imageFilePath = "";

    public async void TakeUploadPhoto()
    {
        if (MediaPicker.Default.IsCaptureSupported)
        {
            FileResult photo = null;

            if(Id == 1)
            {
                photo = await MediaPicker.Default.CapturePhotoAsync();
            }
            else if( Id == 2)
            {
                photo = await MediaPicker.Default.PickPhotoAsync();
            }

            if (photo != null)
            {
                // save the file into local storage
                string localFilePath = Path.Combine(FileSystem.CacheDirectory, photo.FileName);

                using Stream sourceStream = await photo.OpenReadAsync();
                using FileStream localFileStream = File.OpenWrite(localFilePath);

                await sourceStream.CopyToAsync(localFileStream);


                // get image path
                sourceStream.Dispose();
                localFileStream.Dispose();
                var imageBytes = File.ReadAllBytes(localFilePath);
                imageFilePath = Convert.ToBase64String(imageBytes);
                imageFilePath = string.Format("data:image/png;base64,{0}", imageFilePath);
                StateHasChanged();

            }
        }
    }
}
